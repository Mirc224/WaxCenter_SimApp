<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ServicePicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        baQAAAAASUVORK5CYII=
</value>
  </data>
</root>